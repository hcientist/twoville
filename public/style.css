@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500&family=Roboto:wght@400;700&display=swap');

:root {
  --shadow-radius: 20px;
}

.light {
  --shadow-color: #CCCCCC;
  --code-color: rebeccapurple;
  --heading-color: #29498a;
  --heading-color: #cc764c;
  --active-link-color: #414e64;
  --link-color: #5e84d1;
  --right-foreground-color: #333333;
  --right-background-color: #fff3e3;
  --messager-background-color: #fff3e3;
  --messager-foreground-color: #333333;
  --resizer-color: #ede2d3;
  --horizontal-bars-url: url('images/dark_horizontal_bars.png');
  --vertical-bars-url: url('images/dark_vertical_bars.png');
}

.dark {
  --shadow-color: white;
  --code-color: #eeff00;
  --heading-color: #cda869;
  --active-link-color: #bdc5d4;
  --link-color: #7587a6;
  --right-foreground-color: white;
  --right-background-color: black;
  --messager-background-color: #333333;
  --messager-foreground-color: #CCCCCC;
  --resizer-color: #333333;
  --horizontal-bars-url: url('images/light_horizontal_bars.png');
  --vertical-bars-url: url('images/light_vertical_bars.png');
}

* {
  box-sizing: border-box;
}

html {
  /* To disable overscrolling. */
  overflow: hidden;
  height: 100%;
}

body {
  margin: 0;

  /* To disable overscrolling. */
  height: 100%;
  overflow: auto;

  font-family: 'Roboto', sans-serif;
}

code {
  font-family: 'Roboto Mono', monospace;
  font-style: normal;
  font-weight: bold;
  color: var(--code-color);
}

var {
  font-family: 'Roboto Mono', monospace;
  font-style: normal;
  font-weight: bold;
  color: var(--code-color);
}

#docs-root code {
  font-family: 'Roboto Mono', monospace;
  font-weight: 500;
  color: var(--code-color);
  background: none;
  font-size: 0.95em;
  line-height: 0;
}

.monospace {
  font-family: 'Roboto Mono', monospace;
}

#root {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
}

#left {
  min-width: 200px;
  width: 400px;

  display: flex;
  flex-direction: column;
}

#messager-container {
  height: 200px;
  flex: 0 1 auto;

  background-color: var(--messager-background-color);
  color: var(--messager-foreground-color);

  /* These used to be on #messager, but overflow was sometimes cut off. */
  overflow: auto;
}

#messager {
  font-family: 'Roboto Mono', monospace;
  font-size: 150%;
  /* I want the space on the textarea because I want it to scroll. */
  margin: 10px;
}

#editor {
  /* border: 2px solid red; */
  /* flex: 1; */
  flex: 1 1 auto;
  width: 100%;
  min-height: 200px;
}

#right {
  background-color: var(--right-background-color);
  color: var(--right-foreground-color);

  display: flex;
  flex-direction: column;

  /* I'd prefer not to set width and just let it default to min-width. But
     that's not how it works. If I don't set the width, the sidebar will not
     size properly. Using auto for flex-basis means we'll get the minimum
     size from the width, which defaults to sizing to fit the content. If
     the content is big, the sidebar will be big. */
  width: 300px;
  min-width: 300px;
}

.right-section {
  padding: 10px;
  overflow-y: auto;
}

#settings-root {
  height: 400px;
  flex: 0 1 auto;
}

#docs-root {
  flex: 1 1 0;
}

#close-panel-button, #middle-right-resizer, #right {
  display: none;
}

.panel-section {
  margin-bottom: 20px;
}

.panel-section > h3 {
  margin: 0 0 5px 0;
  color: var(--heading-color);
  font-size: 1.4em;
}

#svg {
  width: 100%;
  height: 100vh;
  object-fit: contain;
  background-color: rgb(240, 240, 240);
}

#middle {
  user-select: none;
  position: relative;
  flex: 1;
}

#toolbar {
  position: absolute;
  left: 10px;
  right: 10px;
  top: 10px;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  pointer-events: none;
}

#time-toolbar {
  position: absolute;
  bottom: 10px;
  left: 10px;
  right: 10px;
  margin: 0;
  width: calc(100% - 20px);
  text-align: center;
  pointer-events: none;
}

#time-toolbar input {
  pointer-events: auto;
}

#scrubber {
  width: 100%; 
  margin: 3px 0;
}

a {
  color: var(--link-color);
}

#toolbar-left, #toolbar-middle, #toolbar-right {
  flex: 1 1 0;
  display: flex;
  flex-direction: row;
  /* flex-wrap: wrap; */
  align-items: center;
  overflow: visible;
}

#toolbar-middle {
  justify-content: center;
}

#toolbar-right {
  justify-content: flex-end;
}

html {
  cursor: default;
}

html.grab {
  cursor: grab;
}

html.grabbing {
  cursor: grabbing;
}

.resizer {
  background-color: var(--resizer-color);
  background-position: center;
  background-repeat: no-repeat;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 8px;
}

.height-resizer {
  background-image: var(--horizontal-bars-url);
  cursor: row-resize;
}

.width-resizer {
  background-image: var(--vertical-bars-url);
  cursor: col-resize;
}

.mark, .mark-piece {
  stroke-width: 3;
  stroke-opacity: 1;
  /* stroke: rgb(66, 135, 245); */
  stroke: darkorange;
  vector-effect: non-scaling-stroke;
  fill: none;
  stroke-dasharray: 6 3;
}

.hovered > .mark-piece, .hovered > .mark {
  /* stroke: rebeccapurple; */
  /* stroke-dasharray: unset; */
  animation: ants 0.5s linear infinite forwards;
}

@keyframes ants {
  from {
    stroke-dashoffset: 0;
  }

  to {
    stroke-dashoffset: -9;
  }
}

.filled-mark-piece {
  stroke-width: 1;
  stroke-dasharray: none;
  fill: black;
}

.disabled-mark > .filled-mark-piece {
  fill: gray;
}

.viewport-outline {
  stroke-width: 1;
  stroke: rgb(180, 180, 180);
  stroke-dasharray: none;
}

.cue {
  stroke-width: 2;
  stroke: white;
  stroke-dasharray: none;
  vector-effect: non-scaling-stroke;
}

.disabled-mark > .cue {
  visibility: hidden;
}

.hidden {
  display: none;
}

.tool-icon {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  user-select: none;
  pointer-events: none;
}

.tool-set {
  position: relative;
  width: 50px;
  height: 50px;
  pointer-events: all;
}

#toolbar-right > .tool-set {
  margin: 0 0 0 15px;
}

#toolbar-left > .tool-set {
  margin: 0 15px 0 0;
}

#close-panel-button {
  display: none;
}

.tool-icon-fill {
  opacity: 0;
  transition: opacity 0.1s linear/*, scale 0.1s linear*/;
}

.tool-icon-active {
  opacity: 0;
}

.tool-set:hover > .tool-icon-fill {
  opacity: 1;
}

.tool-set:active > .tool-icon-active {
  opacity: 1;
}

.tool-set:hover > .tool-icon {
  /* transform: scale(1.2); */
}

.hidden {
  display: none;
}

.spinner {
  width: 35px;
  height: 35px;
  margin: 0 auto;
  display: none;
  border: 7px solid #97809e;
  border-top: 7px solid #00537c;
  border-radius: 50%;
  animation: spin 2s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

#docs-toolbar {
  text-align: right;
  display: none;
  position: sticky;
  left: 0;
  right: 0;
  top: 0;
  z-index: 10000;
  /* background-color: black; */
  /* box-shadow: 0 0 20px black; */

  /* These are magic. Sticky positioning appears to stick the element to the
     content box, but we want to obliterate the padding too. */
  /* padding: 10px; */
  /* margin: -10px -10px 0 -10px; */
  /* top: -10px; */
  /* margin-top: -10px; */
}

#docs-content-panel {
  font-size: 1.2em;
}

#docs-content-panel > h2 {
  margin-top: 0;
  color: var(--heading-color);
}

.docs-source {
  margin-bottom: 0;
  white-space: pre-wrap;
}

.copy-container {
  text-align: right;
}

.copy-button {
  display: inline-block;
  font-size: 0.8em;
  text-decoration: none;
}

a:active, .copy-button:active, .link-button:active {
  color: var(--active-link-color);
}

.button-preview {
  display: block;
  width: 100px;
  background-color: white;
  margin: 20px auto;
  padding: 10px;
}

.docs-image {
  display: block;
  box-sizing: border-box;
  width: 50%;
  max-width: 300px;
  margin: 20px auto;
  padding: 10px;
  font-family: sans-serif;
}

.docs-li-image {
  margin-top: 5px;
  margin-left: 0;
}

.docs-image-75 {
  width: 75%;
}

.over-white {
  background-color: white;
}

.settings-grid {
  display: grid;
  grid-template-columns: 150px auto;
  grid-gap: 5px 3px;
  align-items: baseline;
}

#dialog-overlay {
  display: none;
  background-color: rgba(0, 0, 0, 0.5);
  position: fixed;
  z-index: 100;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;

  display: flex;
  justify-content: center;
  align-items: center;
  display: none;
}

.dialog {
  min-width: 400px;
  max-height: 500px;
  background-color: var(--right-background-color);
  box-shadow: 0 0 var(--shadow-radius) 0px var(--shadow-color);
  color: var(--right-foreground-color);
  padding: 20px;
  display: flex;
  flex-direction: column;
  display: none;
}

#open-dialog-files-list {
  font-size: 1em;
}

.dialog-heading {
  margin: 0;
  color: var(--heading-color);
}

.dialog-button {
  margin: 15px 0 0 5px;
  background-color: #2b549f;
  padding: 5px 10px; 
  border: none;
  font-family: 'Roboto';
  color: white;
  outline: none;
  text-transform: uppercase;
  cursor: pointer;
}

.dialog-button:active {
  background-color: cornflowerblue;
}

.dialog-buttons {
  /* text-align: right; */
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
}

.separator {
  flex-grow: 1;
}

#manage-files-delete-button {
  background-color: red;
}

.link-button {
  background: none;
  color: var(--link-color);
  border: none;
  font-size: inherit;
  font-family: inherit;
  padding: 0;
  text-decoration: underline;
  cursor: pointer;
  outline: none;
  white-space: pre;
}

.links-list {
  padding-left: 20px;
}

#rename-prompt {
  margin-top: 3px;
  align-self: flex-end;
}

#save-as-error-box {
  white-space: pre;
  display: none;
  color: orange;
  font-weight: bold;
}

.from-user {
  white-space: pre;
  color: yellow;
  font-weight: bold;
}

#background-color-preview {
  height: 20px;
  cursor: pointer;
  border: 1px solid white;
}

input[type="color"] {
  visibility: hidden;
}

#import-library-picker {
  display: none;
}

figcaption {
  color: darkgray;
  font-size: 80%;
  text-align: center;
}
